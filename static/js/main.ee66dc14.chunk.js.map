{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Resultado.js","helper.js","componentes/Select.js","componentes/Chart.js","componentes/Nav.js","componentes/App.js","registerServiceWorker.js","index.js"],"names":["Header","props","className","titulo","Formulario","state","nombrePersona","idPersona","estatura","peso","cirCintura","cirCuello","cirCaderaMuj","generoMujer","generoHombre","handleFormulario","e","setState","target","id","value","handleAleatorio","randBool","Math","random","toString","substring","floor","handleSubmit","preventDefault","addPersona","reset","alert","onSubmit","this","type","onClick","defaultValue","onChange","checked","name","Component","Resultado","resultado","mensaje","component","classNames","timeout","enter","exit","parseFloat","toFixed","calcularIMC","alturaMetros","pow","calcularGC","cuello","cintura","cadera","altura","mujer","log10","Number","isNaN","existePersona","personas","contador","i","length","pers","JSON","parse","window","localStorage","getItem","persProyectables","push","porDefec","label","Seleccion","selectedOption","opciones","filter","index","self","findIndex","t","handleChange","renderizar","options","map","option","datos","labels","datasets","backgroundColor","borderColor","data","Grafica","opcion","medidas","persona","promedio","grasaCorporal","asignarMedidasGC","cambio","aux","slice","variacion","console","log","doce","doceMeses","Nav","to","href","App","resultadoGrasaCorp","imc","indice","setItem","stringify","basename","process","Route","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ee66dc14.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = props => {\r\n     return(\r\n          <header className=\"top\">\r\n               <h1>\r\n                   {props.titulo}\r\n               </h1>\r\n          </header>\r\n     )\r\n}\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass Formulario extends Component {\r\n\r\n  state = {\r\n    nombrePersona : '', \r\n    idPersona : '',\r\n    estatura : '', \r\n    peso : '',\r\n    cirCintura : '',\r\n    cirCuello : '',\r\n    cirCaderaMuj : '',\r\n    generoMujer : '',\r\n    generoHombre : ''\r\n    }\r\n    //funci√≥n para hacer el manejo de lo que es ingresado en los inputs\r\n    handleFormulario = (e) => {\r\n            this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n      }\r\n\r\n    //LLenado de forma aleatoria\r\n    handleAleatorio= (e) => {\r\n      var randBool = Math.random() >= 0.5\r\n      this.setState({\r\n        nombrePersona : Math.random().toString(36).substring(9), \r\n        idPersona : Math.floor(Math.random() * 100000000),\r\n        estatura : Math.floor(Math.random() * 250), \r\n        peso : Math.floor(Math.random() * 500),\r\n        cirCintura : Math.floor(Math.random() * 200),\r\n        cirCuello : Math.floor(Math.random() * 101),\r\n        cirCaderaMuj : Math.floor(Math.random() * 300),\r\n        generoMujer : randBool,\r\n        generoHombre : !randBool\r\n      })\r\n    }\r\n    //funci√≥n que se dispara al enviar la informaci√≥n del formulario \r\n     handleSubmit = (e) =>  {\r\n          e.preventDefault();\r\n          //env√≠a la info al app root\r\n          if (!this.state.nombrePersona  ||\r\n          !this.state.idPersona  ||\r\n          !this.state.estatura  ||\r\n          !this.state.peso  ||\r\n          !this.state.cirCintura  ||\r\n          !this.state.cirCuello) {\r\n            alert(\"Llene todos los datos\")\r\n        } else {\r\n  \r\n          this.props.addPersona(this.state);\r\n          //vaciamos el formulario al enviar los datos\r\n          e.target.reset();\r\n      }\r\n     }\r\n  \r\n\r\n     render() {\r\n          return (\r\n              <form className=\"cotizar-auto\" onSubmit={this.handleSubmit} >\r\n                  <div className=\"row campo\">\r\n                    <div className=\"col\">\r\n                      <label>Llenado Aleatorio: </label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input className=\"random\" type=\"button\" value=\"Llenar Campos\" onClick={this.handleAleatorio}></input>\r\n                    </div> \r\n                  </div>\r\n\r\n                  <div className=\"row campo\">\r\n                    <div className=\"col\">\r\n                      <label>Nombre: </label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input defaultValue={this.state.nombrePersona} id=\"nombrePersona\" onChange={this.handleFormulario}></input>\r\n                    </div> \r\n                  </div>\r\n\r\n                  <div className=\"row campo\">\r\n                    <div className=\"col\">\r\n                      <label>ID Persona: </label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input defaultValue={this.state.idPersona} id=\"idPersona\" onChange={this.handleFormulario}></input>\r\n                    </div> \r\n                  </div>\r\n\r\n                  <div className=\"row campo\">\r\n                    <div className=\"col\">\r\n                      <label>Estatura (cm): </label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input defaultValue={this.state.estatura} type=\"number\" id=\"estatura\" onChange={this.handleFormulario}></input>\r\n                    </div> \r\n                  </div>\r\n\r\n                  <div className=\"row campo\">\r\n                    <div className=\"col\">\r\n                      <label>Peso (kg):</label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input defaultValue={this.state.peso} type=\"number\" id=\"peso\" onChange={this.handleFormulario}></input>\r\n                    </div> \r\n                  </div>\r\n\r\n                  <div className=\"row campo\">\r\n                    <div className=\"col\">\r\n                      <label>Cintura (cm): </label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input defaultValue={this.state.cirCintura} type=\"number\" id=\"cirCintura\" onChange={this.handleFormulario}></input>\r\n                    </div> \r\n                  </div>\r\n\r\n                  <div className=\"row campo\">\r\n                    <div className=\"col\">\r\n                      <label>Cuello (cm): </label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input defaultValue={this.state.cirCuello} type=\"number\" id=\"cirCuello\" onChange={this.handleFormulario}></input>\r\n                    </div> \r\n                  </div>\r\n\r\n                  <div className=\"row campo\">\r\n                    <div className=\"col-4\">\r\n                      <label>G√©nero:</label>\r\n                    </div>\r\n\r\n                    <div className=\"col-4\">\r\n                      <input checked={this.state.generoMujer} type=\"radio\" id=\"generoMujer\" onChange={this.handleFormulario}  name=\"plan\" value=\"mujer\"/>Fem\r\n                    </div>\r\n\r\n                    <div className=\"col-4\">\r\n                      <input checked={this.state.generoHombre} type=\"radio\" id=\"generoHombre\" onChange={this.handleFormulario}  name=\"plan\" value=\"hombre\"/>Mas\r\n                    </div>\r\n                  </div>\r\n                  {/* Operador ternario que busca la condici√≥n de si es mujer o no para mostrar el imput de la cadera*/}\r\n                  {this.state.generoMujer ? (\r\n                    <div className=\"row campo\">\r\n                      <div className=\"col\">\r\n                        <label>Circunferencia Cadera (cm): </label>\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <input defaultValue={this.state.cirCaderaMuj} type=\"number\" id=\"cirCaderaMuj\" onChange={this.handleFormulario}></input>\r\n                      </div> \r\n                  </div>) : null}\r\n  \r\n                  <button type=\"submit\" className=\"boton\">Calcular</button>\r\n              </form>\r\n          );\r\n      }\r\n}\r\nexport default Formulario;","import React, {Component} from 'react';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nclass Resultado extends Component {\r\n     render() {\r\n          \r\n          const resultado = this.props.resultado;\r\n          const mensaje = (resultado)? 'Su √≠ndice de grasa corporal es: ' \r\n          : 'LLene los datos y presione calcular => ';\r\n          return(\r\n               <div className=\"gran-total\">\r\n                    {mensaje}\r\n                    <TransitionGroup component=\"span\" className=\"resultado\">\r\n                         <CSSTransition \r\n                              classNames=\"resultado\"\r\n                               key={resultado} \r\n                               timeout={{enter: 500, exit: 500}} >\r\n                               <span>{resultado? (parseFloat(resultado).toFixed(2) \r\n                               + ' %'):(\"Resultado \")}</span>\r\n                         </CSSTransition>\r\n                    </TransitionGroup>\r\n               </div>\r\n          )\r\n     }\r\n}\r\n\r\nexport default Resultado;","\r\n  export function calcularIMC(estatura,peso) {\r\n      var alturaMetros=estatura/100 \r\n      var imc = peso / Math.pow(alturaMetros,2)\r\n      return imc  \r\n  }\r\n\r\n  //Funci√≥n de ayuda para calcular el imc de hombre y de mujer seg√∫n caso\r\n  export function calcularGC(cuello,cintura,cadera,altura,mujer) {\r\n      var resultado;\r\n      if (mujer) {\r\n          if(cadera){\r\n            resultado = (495)/(1.29579-0.35004*(Math.log10(Number(cintura) + Number(cadera)-cuello))\r\n            +0.22100*(Math.log10(altura)))-450\r\n          } else {\r\n            alert(\"Por favor introduzca la medida de su cadera\")\r\n            return false\r\n          }   \r\n      } else {\r\n          resultado =  (495)/(1.0324-0.19077*(Math.log10(cintura-cuello))\r\n          +0.15456*(Math.log10(altura)))-450 }\r\n\r\n      if (isNaN(resultado)){\r\n        alert('revise sus datos, estos son err√≥neos')\r\n        return false\r\n\r\n      }else if (mujer && resultado<10) {\r\n          alert(\"revise los datos, el m√≠nimo de grasa para la supervivencia de una mujer es 10%\")\r\n          return false\r\n      } else if(resultado<2){\r\n        alert(\"revise los datos, el m√≠nimo de grasa para la supervivencia de un hombre es 2%\")\r\n        return false   \r\n      }\r\n      else{\r\n          return resultado\r\n      }\r\n  }\r\n\r\n  //Funci√≥n para ver si ya se encuentra la persona en localstorage\r\n\r\n  export function existePersona(personas,idPersona){\r\n    var contador = 0;\r\n        if (personas) {\r\n            for (let i = 0; i < personas.length; i++) {\r\n                var pers = personas[i].idPersona;\r\n                if ( pers === idPersona || pers === Number(idPersona)){\r\n                    contador++\r\n                  }    \r\n            }\r\n        }\r\n\r\n    return contador\r\n  }\r\n\r\n  export function aparicionesPersona(personas,idPersona) {\r\n    var contador = 0;\r\n        if (personas) {\r\n            for (let i = 0; i < personas.length; i++) {\r\n                var pers = personas[i].idPersona;\r\n                if ( pers === idPersona || pers === Number(idPersona)){\r\n                    contador++\r\n                  }    \r\n            }\r\n            return contador\r\n        }\r\n  }\r\n","import React, { Component } from 'react'\r\nimport Select from 'react-select';\r\nimport {existePersona} from '../helper';\r\n\r\nconst personas= JSON.parse(window.localStorage.getItem('personas'));\r\n\r\n//Filtramos s√≥lo las personas que tienen m√°s de dos registros\r\n\r\nif (personas) {\r\n    var persProyectables = [];\r\n    for (let i = 0; i < personas.length; i++) {\r\n        if (existePersona(personas,personas[i].idPersona) > 1) {\r\n            persProyectables.push(personas[i])\r\n        }\r\n    }\r\n}\r\n\r\nconst porDefec = [\r\n    { value: 'Sin datos', label: 'Sin datos que mostrar' }\r\n    ];\r\n\r\n\r\nclass Seleccion extends Component {\r\n\r\n    state = {\r\n        selectedOption: null,\r\n      };\r\n\r\n    opciones = {\r\n        personas: persProyectables.filter((persProyectables, index, self) =>\r\n        index === self.findIndex((t) => (t.idPersona === persProyectables.idPersona)))\r\n      };\r\n\r\n      handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        //funcion obtenida como props de chart que envia el valor que selecciono a su padre(chart)\r\n        this.props.renderizar(selectedOption);\r\n      };\r\n\r\n      \r\n\r\n    render() { \r\n        const { selectedOption } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex justify-content-center s-1 p-3 mb-2 bg-success text-white\">\r\n                    <label>Personas Proyectables</label>\r\n                </div>\r\n                <Select\r\n                    value={selectedOption}\r\n                    onChange={this.handleChange}\r\n                    options={\r\n                        this.opciones.personas? \r\n                        (this.opciones.personas.map((option) => ({\r\n                        value: option.idPersona,\r\n                        label: option.nombrePersona}) )) : (porDefec)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Seleccion;\r\n","import React, { Component } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport Seleccion from './Select';\r\n\r\nconst personas= JSON.parse(window.localStorage.getItem('personas'));\r\n\r\nconst datos = {\r\n    //Lo que va en el pie de la gr√°fica, en este caso los meses\r\n    labels: [1,2,3,4,5,6,7,8,9,10,11,12],\r\n    datasets: [{\r\n        //El titulo de la gr√°fica\r\n        label: 'Proyecci√≥n de grasa corporal (en Meses)',\r\n        backgroundColor: 'rgb(93, 188, 210)',\r\n        borderColor: 'rgb(239, 166, 71)',\r\n        //los datos\r\n        data: []\r\n    }\r\n]}\r\n\r\n\r\nclass Grafica extends Component{\r\n    state = {\r\n        opcion: '',\r\n        data : []\r\n    }\r\n\r\n    renderizar = (opcion) => {\r\n        this.setState({\r\n          opcion : opcion\r\n       })}\r\n       \r\n    render(){\r\n        if (personas) {\r\n            let medidas = asignarMedidasGC(this.state.opcion.value,personas)\r\n            let cambio = variacion(medidas).toFixed(2)\r\n            console.log(cambio)\r\n            let doce = doceMeses(medidas,cambio)\r\n            datos.datasets[0].data = doce\r\n        }\r\n        \r\n        return(\r\n            <div className=\"grafica\">\r\n                <Seleccion renderizar={this.renderizar}/>\r\n                <Line data={datos}/>\r\n            </div>      \r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default Grafica;\r\n\r\n\r\n//funcion que tomara el id de la persona y calculara si aumento o disminuyo la grasa corporal\r\nfunction asignarMedidasGC(id,persona) {\r\n    var promedio = [];\r\n    for (let i = 0; i < persona.length; i++) {\r\n        if(persona[i].idPersona === id)\r\n        {\r\n            promedio.push(persona[i].grasaCorporal.toFixed(2));\r\n        }\r\n        \r\n    }\r\n    return promedio\r\n}\r\n\r\n//funcion para sacar la variacion entre la antepenultima y ultima medici√≥n\r\nfunction variacion(medidas) {\r\n    //obtenemos los √∫ltimos 2 valores\r\n    let aux = medidas.slice(-2)\r\n    let dif = aux[1] - aux[0]           \r\n    return dif\r\n    \r\n}\r\n\r\n//proyectar a 12 meses\r\nfunction doceMeses(medidas,cambio) {\r\n    if (medidas.length > 1) {\r\n       for (let i = medidas.length; i < 12; i++) {\r\n            medidas[i] = (Number(medidas[i-1]) + Number(cambio)).toFixed(2)    \r\n    } \r\n    } else {\r\n        for (let i = medidas.length; i < 12; i++) {\r\n            medidas.push(0)\r\n        }\r\n    }\r\n    \r\n    return medidas\r\n}","import React from 'react'\r\nimport {NavLink } from 'react-router-dom'\r\n\r\nconst personas= JSON.parse(window.localStorage.getItem('personas'));\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <form className=\"form-inline\">\r\n                    <NavLink className=\"btn btn-outline-success btn-lg\" to=\"/formulario\">Calculadora</NavLink>\r\n                    {personas? (<a className=\"btn btn-outline-warning btn-lg\" href=\"/chart\">Gr√°fica</a>)\r\n                    :(<a className=\"btn btn-outline-warning btn-lg disabled\" href=\"/chart\">Gr√°fica</a>)}\r\n                </form> \r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Formulario from './Formulario';\r\nimport Resultado from './Resultado';\r\nimport Grafica from './Chart';\r\nimport Nav from './Nav';\r\nimport {calcularIMC, calcularGC} from '../helper';\r\n// import { BrowserRouter, Route } from 'react-router-dom';\r\nimport { HashRouter as Router } from 'react-router-dom'\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    contador : 0,\r\n    resultadoGrasaCorp: '',\r\n    personas:[]\r\n  }\r\n  //Guardar los datos de las personas en el local storage y el contador\r\n  componentDidUpdate() {\r\n      localStorage.setItem(\r\n      'personas',JSON.stringify(this.state.personas)\r\n      ) \r\n\r\n      localStorage.setItem(\r\n        'contador',JSON.stringify(this.state.contador)\r\n        )\r\n  }\r\n\r\n  addPersona = (persona) => {\r\n    this.setState({\r\n        contador : this.state.contador+1\r\n    });\r\n    //calculamos el imc y lo agregamos a persona\r\n    persona.imc = calcularIMC(persona.estatura,persona.peso);\r\n\r\n     //calculamos el %gc y lo agregamos a persona\r\n      //calculamos el imc y lo agregamos a persona\r\n    persona.grasaCorporal = calcularGC(persona.cirCuello,\r\n      persona.cirCintura,\r\n      persona.cirCaderaMuj,\r\n      persona.estatura,\r\n      persona.generoMujer);\r\n    \r\n    if (persona.grasaCorporal) {\r\n    //Agregamos el valor del resultado actual\r\n    this.setState({\r\n      resultadoGrasaCorp : persona.grasaCorporal\r\n    })\r\n    //Agregamos un indice aleatorio\r\n    persona.indice = Math.floor(Math.random() * 200) \r\n    //spread operator para no modificar el state directamente\r\n    //asignarle al state personas el nuevo arreglo (se modifica\r\n    //anteriormente el arreglo y se asigna de nuevo ya modificado)\r\n    this.setState({\r\n      personas: [...(this.state.personas || []), persona]\r\n    })\r\n  }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n      <div className=\"contenedor\">\r\n        <Nav/>\r\n        <Header titulo = 'Simulador Grasa Corporal'/>\r\n        <Route path='/chart' component={() => <Grafica/>} />\r\n        <div className=\"contenedor-formulario\">\r\n          <Route path='/formulario' component={() => <Formulario addPersona={this.addPersona}/>} />\r\n          <Resultado resultado={this.state.resultadoGrasaCorp}/> \r\n        </div>\r\n        \r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './componentes/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}